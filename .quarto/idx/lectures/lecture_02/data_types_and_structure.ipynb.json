{"title":"Lecture 02 - Data Types and Structures","markdown":{"yaml":{"title":"Lecture 02 - Data Types and Structures"},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\n\n\n\n\n\nIn Python, **types** and **structures** are fundamental concepts that allow the storage, manipulation, and organization of data. \n\nThis notebook covers:\n\n- **Basic data types**: `int`, `float`, `bool`, `str`\n- **Data structures**: `tuple`, `list`, `set`, `dict`\n- **Operations** and **built-in methods**\n\n## 1. Basic Types\n\n**List of types** \n\n| Object type | Meaning | Used for |\n| --- | --- | --- |\n|`int` | integer value | natural numbers |\n| `float` | floating-point number | real numbers |\n| `bool` | boolean value | true or false |\n| `str` | string object | character, word, text |\n\n*use built-in function `type()` to obtain the information*\n\n### 1.1 Integers and Floats\n\n**Integers** are whole numbers, while **floats** are numbers with decimal values. \n\n#### `Int`\n\n\nArithmetic operations: `+` `-` `*` `/`\n\n#### `Floats`\n\n### 1.2 Booleans\n\n**Booleans** represent `True` or `False` values. \n\n#### Conditions: `>` `<` `>=` `<=` `==` `!=`\n\n#### Logic operations: `and` `or` `not` `in`\n\n#### Combinations\n\n**Note:** Major for control condition (`if` `while` `for`) -- *see later*\n\n#### Boolean casting: 0,1 (and other values)\n\n### 1.3 Strings\n\n**Strings** are used to represent text. \n\n#### Built-in methods\n\n`str` variables come with a series of useful built-in methods.\n\n| Method |\n| --- |\n| `capitalize()` |\n| `count()` |\n| `find()` |\n| `join()` |\n| `replace()` |\n| `split()` |\n| `upper()` |\n\n#### Print method `print()`\n\n#### Printing with variables\n\n## 2. Basic structures\n\n**List of structures** \n\n| Object type | Meaning | Used for |\n| --- | --- | --- |\n| `tuple` | immutable container | fixed set of objects |\n| `list` | mutable container | ordered and changing set of objects |\n| `dict` | mutable container | key-value store |\n| `set` | mutable container | unordered collection of unique objects |\n\n\n*use built-in function `type()` to obtain the information*\n\n\n**Navigating structures**\n\n- **Indexing**: obtain item at position *n* \n        s[n]\n- **Slicing**: obtain items between position *i* and *j*\n        s[i:j]\n        s[i:]\n        s[:j]\n- **Ranging**: obtain items between position *i* and *j* spaced by *k*\n        s[i:j:k]\n\n**Note:** In Python, indexing starts at `0`\n\n### 2.1 `tuple`\n\n**Tuples** are **immutable** collections of items (i.e., cannot be changed after creation). \n\n### 2.2 `list`\n\n**Lists** are **ordered** collections of items, which can be of mixed data types. \n\n#### Built-in methods\n\n| Method |\n| --- |\n| `l[i] = x` |\n| `l[i:j:k] = s` |\n| `append()` |\n| `count()` |\n| `del l[i:j:k]` |\n| `index()` |\n| `extend()` |\n| `insert()` |\n| `remove()` |\n| `pop()` |\n| `revers()` |\n| `sort()` |\n\n*contrary to tuples, lists are mutable containers*\n\n**Mutable vs immutable objects**\n\n### 2.3 `dict`\n\n**Dictionaries** store data as key-value pairs.\n\n#### Keys and values\n\n#### Built-in methods\n\n| Method |\n| --- |\n| `d[k]` |\n| `d[k] = x` |\n| `del d[k]` |\n| `clear()` |\n| `copy()` |\n| `items()` |\n| `keys()` |\n| `values()` |\n| `popitem()` |\n| `update()` |\n\n### 2.4 `set`\n\n**Sets** are unordered collections of unique items.\n\n#### Set operations\n\n \n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n## Overview\n\nIn Python, **types** and **structures** are fundamental concepts that allow the storage, manipulation, and organization of data. \n\nThis notebook covers:\n\n- **Basic data types**: `int`, `float`, `bool`, `str`\n- **Data structures**: `tuple`, `list`, `set`, `dict`\n- **Operations** and **built-in methods**\n\n## 1. Basic Types\n\n**List of types** \n\n| Object type | Meaning | Used for |\n| --- | --- | --- |\n|`int` | integer value | natural numbers |\n| `float` | floating-point number | real numbers |\n| `bool` | boolean value | true or false |\n| `str` | string object | character, word, text |\n\n*use built-in function `type()` to obtain the information*\n\n### 1.1 Integers and Floats\n\n**Integers** are whole numbers, while **floats** are numbers with decimal values. \n\n#### `Int`\n\n\nArithmetic operations: `+` `-` `*` `/`\n\n#### `Floats`\n\n### 1.2 Booleans\n\n**Booleans** represent `True` or `False` values. \n\n#### Conditions: `>` `<` `>=` `<=` `==` `!=`\n\n#### Logic operations: `and` `or` `not` `in`\n\n#### Combinations\n\n**Note:** Major for control condition (`if` `while` `for`) -- *see later*\n\n#### Boolean casting: 0,1 (and other values)\n\n### 1.3 Strings\n\n**Strings** are used to represent text. \n\n#### Built-in methods\n\n`str` variables come with a series of useful built-in methods.\n\n| Method |\n| --- |\n| `capitalize()` |\n| `count()` |\n| `find()` |\n| `join()` |\n| `replace()` |\n| `split()` |\n| `upper()` |\n\n#### Print method `print()`\n\n#### Printing with variables\n\n## 2. Basic structures\n\n**List of structures** \n\n| Object type | Meaning | Used for |\n| --- | --- | --- |\n| `tuple` | immutable container | fixed set of objects |\n| `list` | mutable container | ordered and changing set of objects |\n| `dict` | mutable container | key-value store |\n| `set` | mutable container | unordered collection of unique objects |\n\n\n*use built-in function `type()` to obtain the information*\n\n\n**Navigating structures**\n\n- **Indexing**: obtain item at position *n* \n        s[n]\n- **Slicing**: obtain items between position *i* and *j*\n        s[i:j]\n        s[i:]\n        s[:j]\n- **Ranging**: obtain items between position *i* and *j* spaced by *k*\n        s[i:j:k]\n\n**Note:** In Python, indexing starts at `0`\n\n### 2.1 `tuple`\n\n**Tuples** are **immutable** collections of items (i.e., cannot be changed after creation). \n\n### 2.2 `list`\n\n**Lists** are **ordered** collections of items, which can be of mixed data types. \n\n#### Built-in methods\n\n| Method |\n| --- |\n| `l[i] = x` |\n| `l[i:j:k] = s` |\n| `append()` |\n| `count()` |\n| `del l[i:j:k]` |\n| `index()` |\n| `extend()` |\n| `insert()` |\n| `remove()` |\n| `pop()` |\n| `revers()` |\n| `sort()` |\n\n*contrary to tuples, lists are mutable containers*\n\n**Mutable vs immutable objects**\n\n### 2.3 `dict`\n\n**Dictionaries** store data as key-value pairs.\n\n#### Keys and values\n\n#### Built-in methods\n\n| Method |\n| --- |\n| `d[k]` |\n| `d[k] = x` |\n| `del d[k]` |\n| `clear()` |\n| `copy()` |\n| `items()` |\n| `keys()` |\n| `values()` |\n| `popitem()` |\n| `update()` |\n\n### 2.4 `set`\n\n**Sets** are unordered collections of unique items.\n\n#### Set operations\n\n \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"data_types_and_structure.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["../../refs.bib"],"theme":"cosmo","toc-location":"left","title":"Lecture 02 - Data Types and Structures"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}